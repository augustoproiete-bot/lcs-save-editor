<!--
Copyright(c) 2016-2019 Wes Hampson

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->

<Window
    x:Class="LcsSaveEditor.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:c="clr-namespace:LcsSaveEditor.Converters;assembly=LcsSaveEditor.Converters"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:infr="clr-namespace:LcsSaveEditor.Infrastructure;assembly=LcsSaveEditor.Infrastructure"
    xmlns:r="clr-namespace:LcsSaveEditor.Resources;assembly=LcsSaveEditor.Resources"
    xmlns:vm="clr-namespace:LcsSaveEditor.ViewModels;assembly=LcsSaveEditor.ViewModels"
    xmlns:v="clr-namespace:LcsSaveEditor.Views"
    mc:Ignorable="d"
    Title="{Binding WindowTitle}"
    Height="450" Width="600"
    Loaded="Window_Loaded"
    Closing="Window_Closing">

    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <!-- Converters -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <c:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>

        <!-- Page data templates -->
        <DataTemplate DataType="{x:Type vm:StartViewModel}">
            <v:StartView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:WeaponsViewModel}">
            <v:WeaponsView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:GlobalVariablesViewModel}">
            <v:GlobalVariablesView/>
        </DataTemplate>

        <!-- Component styles -->
        <Style TargetType="{x:Type v:TabControlEx}" x:Key="TabControlStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <!-- Template code to render TabControlEx. Adapted from http://stackoverflow.com/a/9802346. -->
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid
                            Background="{TemplateBinding Background}"
                            ClipToBounds="True"
                            KeyboardNavigation.TabNavigation="Local"
                            SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <DockPanel Margin="2,2,0,0" LastChildFill="False">
                                <TabPanel
                                    x:Name="HeaderPanel"
                                    Margin="0,0,0,-1"
                                    VerticalAlignment="Bottom"
                                    Panel.ZIndex="1"
                                    DockPanel.Dock="Left"
                                    IsItemsHost="True"
                                    KeyboardNavigation.TabIndex="1"/>
                            </DockPanel>
                            <Border
                                x:Name="ContentPanel"
                                Grid.Row="1" Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                                <Grid
                                    x:Name="PART_ItemsHolder"
                                    Margin="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding
            Command="{Binding OpenFileCommand}"
            Key="O" Modifiers="Ctrl"/>
        <KeyBinding
            Command="{Binding SaveFileCommand}"
            Key="S" Modifiers="Ctrl"/>
        <KeyBinding
            Command="{Binding SaveFileAsCommand}"
            Key="S" Modifiers="Ctrl+Shift"/>
        <KeyBinding
            Command="{Binding ReloadFileCommand}"
            Key="F5"/>
        <KeyBinding
            Command="{Binding CloseFileCommand}"
            Key="W" Modifiers="Ctrl"/>
        <KeyBinding
            Command="{Binding ExitAppCommand}"
            Key="F4" Modifiers="Alt"/>
        <KeyBinding
            Command="{Binding ShowAboutDialogCommand}"
            Key="F1"/>
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>

        <DockPanel>

            <!-- ========== Menu area ========== -->

            <Menu DockPanel.Dock="Top">
                <!-- File Menu -->
                <MenuItem Header="{x:Static r:FrontendResources.Main_MenuFile}">
                    <MenuItem
                        Command="{Binding OpenFileCommand}"
                        Header="{x:Static r:FrontendResources.Main_MenuFile_Open}"
                        InputGestureText="Ctrl+O"/>
                    <MenuItem ItemsSource="{Binding RecentFiles.Items}"
                        Header="{x:Static r:FrontendResources.Main_MenuFile_OpenRecent}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Command" Value="{Binding Command}"/>
                            </Style>
                        </MenuItem.ItemContainerStyle>
                        <MenuItem.ItemTemplate>
                            <HierarchicalDataTemplate
                                DataType="{x:Type vm:RecentlyAccessedFile}"
                                ItemsSource="{Binding RecentFiles}">
                                <TextBlock Text="{Binding Path}"/>
                            </HierarchicalDataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                    <Separator/>
                    <MenuItem
                        Command="{Binding SaveFileCommand}"
                        Header="{x:Static r:FrontendResources.Main_MenuFile_Save}"
                        InputGestureText="Ctrl+S"/>
                    <MenuItem
                        Command="{Binding SaveFileAsCommand}"
                        Header="{x:Static r:FrontendResources.Main_MenuFile_SaveAs}"
                        InputGestureText="Ctrl+Shift+S"/>
                    <Separator/>
                    <MenuItem
                        Command="{Binding ReloadFileCommand}"
                        Header="{x:Static r:FrontendResources.Main_MenuFile_Reload}"
                        InputGestureText="F5"/>
                    <MenuItem
                        Command="{Binding CloseFileCommand}"
                        Header="{x:Static r:FrontendResources.Main_MenuFile_Close}"
                        InputGestureText="Ctrl+W"/>
                    <Separator/>
                    <MenuItem
                        Command="{Binding ExitAppCommand}"
                        Header="{x:Static r:FrontendResources.Main_MenuFile_Exit}"
                        InputGestureText="Alt+F4"/>
                </MenuItem>

                <!-- View Menu -->
                <MenuItem Header="{x:Static r:FrontendResources.Main_MenuView}">
                    <MenuItem
                        Command="{Binding ShowLogWindowCommand}"
                        Header="{x:Static r:FrontendResources.Main_MenuView_Log}"/>
                </MenuItem>

                <!-- Help Menu -->
                <MenuItem Header="{x:Static r:FrontendResources.Main_MenuHelp}">
                    <MenuItem
                        Command="{Binding ShowAboutWindowCommand}"
                        Header="{x:Static r:FrontendResources.Main_MenuHelp_About}"
                        InputGestureText="F1"/>
                </MenuItem>

            </Menu>

            <!-- ========== Main window area ========== -->

            <v:TabControlEx
                DockPanel.Dock="Top"
                Style="{StaticResource TabControlStyle}"
                ItemsSource="{Binding Tabs}"
                IsSynchronizedWithCurrentItem="True"
                SelectedIndex="{Binding SelectedTabIndex}">

                <TabControl.ItemContainerStyle>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter
                            Property="Visibility"
                            Value="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </Style>
                </TabControl.ItemContainerStyle>

                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Title, Mode=OneWay}"/>
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </v:TabControlEx>
        </DockPanel>

        <!-- ========== Status bar area ========== -->

        <StatusBar Grid.Row="1" Background="White">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="65"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="120"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem Grid.Column="0" HorizontalAlignment="Left">
                <TextBlock Text="{Binding StatusText}" TextTrimming="CharacterEllipsis"/>
            </StatusBarItem>

            <Separator Grid.Column="1"/>

            <StatusBarItem Grid.Column="2" HorizontalAlignment="Center">
                <TextBlock
                    Text="{x:Static r:FrontendResources.Main_StatusBar_FileModifiedFlag}"
                    Visibility="{Binding IsFileModified, Converter={StaticResource BooleanToVisibilityConverter}}">

                    <TextBlock.ToolTip>
                        <ToolTip>
                            <TextBlock Text="{Binding FileModifiedToolTipText}"/>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>
            </StatusBarItem>

            <Separator Grid.Column="3"/>

            <StatusBarItem Grid.Column="4" HorizontalContentAlignment="Center">
                <TextBlock
                        Text="{Binding CurrentSaveData.FileType, Converter={StaticResource EnumDescriptionConverter}}"
                        Visibility="{Binding IsFileOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock.ToolTip>
                        <ToolTip>
                            <TextBlock Text="{Binding FileTypeToolTipText}"/>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>

    </Grid>
</Window>
