<!--
Copyright(c) 2016-2019 Wes Hampson

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->

<Window x:Class="LcsSaveEditor.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:c="clr-namespace:LcsSaveEditor.Converters;assembly=LcsSaveEditor.Converters"
        xmlns:r="clr-namespace:LcsSaveEditor.Resources;assembly=LcsSaveEditor.Resources"
        xmlns:vm="clr-namespace:LcsSaveEditor.ViewModels;assembly=LcsSaveEditor.ViewModels"
        xmlns:v="clr-namespace:LcsSaveEditor.Views"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}"
        Height="450" Width="600"
        Closing="Window_Closing">

    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <c:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
        <DataTemplate DataType="{x:Type vm:WeaponsViewModel}">
            <v:WeaponsView DataChanged="View_DataChanged"/>
        </DataTemplate>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Command="{Binding OpenFileCommand}"
                    Key="O" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding CloseFileCommand}"
                    Key="W" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding SaveFileCommand}"
                    Key="S" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding SaveFileAsCommand}"
                    Key="S" Modifiers="Ctrl+Shift"/>
        <KeyBinding Command="{Binding ExitAppCommand}"
                    Key="F4" Modifiers="Alt"/>
        <KeyBinding Command="{Binding ShowAboutDialogCommand}"
                    Key="F1"/>
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>

        <DockPanel>
            <Menu DockPanel.Dock="Top">

                <!-- File Menu -->
                <MenuItem Header="{x:Static r:Strings.MenuHeaderFile}">
                    <MenuItem Command="{Binding OpenFileCommand}"
                              Header="{x:Static r:Strings.MenuItemHeaderOpen}"
                              InputGestureText="Ctrl+O"/>
                    <MenuItem Command="{Binding CloseFileCommand}"
                              Header="{x:Static r:Strings.MenuItemHeaderClose}"
                              InputGestureText="Ctrl+W"/>
                    <Separator/>
                    <MenuItem Command="{Binding SaveFileCommand}"
                              Header="{x:Static r:Strings.MenuItemHeaderSave}"
                              InputGestureText="Ctrl+S"/>
                    <MenuItem Command="{Binding SaveFileAsCommand}"
                              Header="{x:Static r:Strings.MenuItemHeaderSaveAs}"
                              InputGestureText="Ctrl+Shift+S"/>
                    <Separator/>
                    <MenuItem Command="{Binding ExitAppCommand}"
                              Header="{x:Static r:Strings.MenuItemHeaderExit}"
                              InputGestureText="Alt+F4"/>
                </MenuItem>

                <!-- Help Menu -->
                <MenuItem Header="{x:Static r:Strings.MenuHeaderHelp}">
                    <MenuItem Command="{Binding ShowAboutDialogCommand}"
                              Header="{x:Static r:Strings.MenuItemHeaderAbout}"
                              InputGestureText="F1"/>
                </MenuItem>

            </Menu>

            <TabControl DockPanel.Dock="Top"
                        ItemsSource="{Binding Tabs}"
                        SelectedIndex="{Binding SelectedTabIndex}">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Header}"/>
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </TabControl>

        </DockPanel>

        <StatusBar Grid.Row="1" Background="White">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="75"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="75"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem Grid.Column="0" HorizontalAlignment="Left">
                <TextBlock Text="{Binding StatusText}"/>
            </StatusBarItem>

            <Separator Grid.Column="1"/>

            <StatusBarItem Grid.Column="2" HorizontalAlignment="Center">
                <TextBlock Text="{x:Static r:Strings.TextFileModified}"
                           Visibility="{Binding IsFileModified, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock.ToolTip>
                        <ToolTip>
                            <TextBlock Text="{Binding FileModifiedToolTipText}"/>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>
            </StatusBarItem>

            <Separator Grid.Column="3"/>

            <StatusBarItem Grid.Column="4" HorizontalContentAlignment="Center">
                <TextBlock Text="{Binding CurrentSaveData.FileType, Converter={StaticResource EnumDescriptionConverter}}"
                           Visibility="{Binding IsFileOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock.ToolTip>
                        <ToolTip>
                            <TextBlock Text="{Binding FileTypeToolTipText}"/>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>

    </Grid>

</Window>
