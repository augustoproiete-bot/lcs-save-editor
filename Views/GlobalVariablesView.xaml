<!--
Copyright(c) 2016-2019 Wes Hampson

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->

<v:PageViewBase x:Class="LcsSaveEditor.Views.GlobalVariablesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:c="clr-namespace:LcsSaveEditor.Converters;assembly=LcsSaveEditor.Converters"
             xmlns:r="clr-namespace:LcsSaveEditor.Resources;assembly=LcsSaveEditor.Resources"
             xmlns:vm="clr-namespace:LcsSaveEditor.ViewModels;assembly=LcsSaveEditor.ViewModels"
             xmlns:v="clr-namespace:LcsSaveEditor.Views"
             mc:Ignorable="d" 
             d:DesignHeight="325" d:DesignWidth="500">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style TargetType="CheckBox" x:Key="CheckBoxStyle">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="65"/>
        </Grid.RowDefinitions>

        <DataGrid Grid.Row="0"
                  ItemsSource="{Binding GlobalVariables}"
                  HorizontalAlignment="Center"
                  ScrollViewer.CanContentScroll="True"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  AutoGenerateColumns="False"
                  CanUserSortColumns="False"
                  CanUserResizeRows="False"
                  CanUserAddRows="True"
                  LoadingRow="DataGrid_LoadingRow">
            
            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Path=Header, RelativeSource={RelativeSource AncestorType=DataGridRow}}"/>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Width="40*"
                                    Binding="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Int32" Width="25*"
                                    Binding="{Binding Path=Value.ValueInt32, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="UInt32" Width="25*"
                                    Binding="{Binding Path=Value.ValueUInt32, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Float" Width="25*"
                                    Binding="{Binding Path=Value.ValueSingle, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTemplateColumn Header="True/False" Width="25*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      IsChecked="{Binding Path=Value.ValueBoolean, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Grid Grid.Row="1" Background="White">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="75"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="125"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <CheckBox Grid.Row="0" Grid.Column="0"
                      Style="{StaticResource CheckBoxStyle}"
                      Content="Int32"/>
            <CheckBox Grid.Row="1" Grid.Column="0"
                      Style="{StaticResource CheckBoxStyle}"
                      Content="UInt32"/>
            <CheckBox Grid.Row="0" Grid.Column="1"
                      Style="{StaticResource CheckBoxStyle}"
                      Content="Float"/>
            <CheckBox Grid.Row="1" Grid.Column="1"
                      Style="{StaticResource CheckBoxStyle}"
                      Content="True/False"/>
            <Button Grid.Row="0" Grid.Column="2" Content="Load Symbols..." Margin="10,5,10,5"/>
            <Button Grid.Row="1" Grid.Column="2" Content="Save Symbols..." Margin="10,5,10,5"/>
        </Grid>
    </Grid>
</v:PageViewBase>
